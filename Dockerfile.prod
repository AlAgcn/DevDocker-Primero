FROM ubuntu:xenial as build

RUN apt-get update; \
    apt-get install -y --no-install-recommends \
    ca-certificates \
    curl \
    wget \
    git \
    bash-completion \
    software-properties-common \
    postgresql-client \
    openjdk-8-jdk \
    ant \
    maven \
    unzip \
    libreoffice \
    sudo \
    locales \
    imagemagick \
    ghostscript \
    bison \
    build-essential \
    zlib1g-dev \
    libssl-dev \
    libxml2-dev \
    git-core; \
    locale-gen en_US.UTF-8; \
    wget https://deb.nodesource.com/setup_6.x -O -| sudo bash - ;\
    apt-get install -y nodejs; \
    rm -rf /var/lib/apt/lists/*

# Define commonly used JAVA_HOME variable
ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64

WORKDIR /tmp

#DCEVM installation
#Since DCEVM for Xenial seems kind of broken, we download it from zetzy
#RUN wget http://mirrors.kernel.org/ubuntu/pool/universe/o/openjdk-8-jre-dcevm/openjdk-8-jre-dcevm_8u112-1_amd64.deb && \
#    dpkg -i openjdk-8-jre-dcevm_8u112-1_amd64.deb

# Install Tomcat 8
ENV CATALINA_HOME=/usr/local/tomcat
ENV TOMCAT_MAJOR=8 TOMCAT_VERSION=8.0.44
ENV TOMCAT_TGZ_URL=https://archive.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz
RUN mkdir -p $CATALINA_HOME
RUN wget "$TOMCAT_TGZ_URL" -O tomcat.tar.gz \
    && tar -xvf tomcat.tar.gz --strip-components=1 -C "$CATALINA_HOME"
ENV PATH=$CATALINA_HOME/bin:$PATH

#Create DSpace folders
RUN mkdir -p /srv/dspace 
ENV DSPACE_HOME=/srv/dspace
ENV PATH=$DSPACE_HOME/bin:$PATH

###
# Bash configuration
###

#Configure colors and autocompletion
COPY bashrc /root/.bashrc
COPY bashrc /home/dspace/.bashrc

#Configure some useful aliases
COPY bash_aliases /root/.bash_aliases
COPY bash_aliases /home/dspace/.bash_aliases

###
# Tomcat configuration tweaks
###

# Configure remote debugging and extra memory
COPY setenv.sh $CATALINA_HOME/bin

#Install Hotswap agent
#COPY HotswapAgent-0.3.zip /usr/lib/hotswapagent/HotswapAgent-0.3.zip
#RUN wget https://github.com/HotswapProjects/HotswapAgent/releases/download/RELEASE-0.3/HotswapAgent-0.3.zip -O HotswapAgent.zip
#RUN mkdir /usr/lib/hotswapagent
#RUN unzip HotswapAgent.zip -d /usr/lib/hotswapagent/
#RUN rm HotswapAgent.zip

RUN export HOME=/home/dspace
RUN export uid=1000 gid=1000 && \
    mkdir -p /home/dspace && \
    echo "dspace:x:${uid}:${gid}:dspace,,,:/home/dspace:/bin/bash" >> /etc/passwd && \
    echo "dspace:x:${uid}:" >> /etc/group && \
    echo "dspace ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/dspace && \
    chmod 0440 /etc/sudoers.d/dspace && \
    chown ${uid}:${gid} -R /home/dspace

#COPY entrypoint.sh /
#RUN chmod +x /entrypoint.sh
#ENTRYPOINT ["/entrypoint.sh"]

#Install PSI Probe
#RUN wget https://github.com/psi-probe/psi-probe/releases/download/2.4.0/probe-2.4.0.zip -O probe.zip
#RUN unzip probe.zip
#RUN mv probe.war $CATALINA_HOME/webapps/probe.war

RUN npm install -g grunt bower

###
# Installing an IDE
###

#Download the IDE
#ADD https://download.jetbrains.com/idea/ideaIC-2016.1.2.tar.gz /home/dspace/idea

#Required for running Idea IDE
#RUN apt-get install libxext-dev libxrender-dev libxtst-dev -y

#To make intellij work. For some reason, it requires the fonts to be installed
#RUN  apt-get install fontconfig fontconfig-config fonts-dejavu-core fonts-dejavu-extra -y


#Uncomment this lines to set a custom UID. E.g.: 1009
#RUN export uid=1009 && usermod -u $uid dspace
#RUN  chown -R dspace:dspace /home/dspace

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'


#Also, give dspace ownership of CATALINA_HOME
#RUN chown -R dspace:dspace $CATALINA_HOME/
#USER dspace

USER dspace
#Install ruby deps
RUN curl -sSL https://rvm.io/mpapis.asc | gpg --import - \
  && curl -sSL https://rvm.io/pkuczynski.asc | gpg --import - \
  && curl -sSL https://get.rvm.io | bash -s stable --ruby

RUN bash -c "source ~/.profile \
  && gem install sass -v 3.3.14 \
  && gem install compass -v 1.0.1"

RUN echo "source ~/.profile" >> ~/.bashrc

#Link DSpace binary
RUN sudo ln -s /srv/dspace/bin/dspace /usr/bin/dspace

COPY conf $CATALINA_HOME/conf
COPY dspace-src /srv/dspace-src
COPY m2-repo /home/dspace/.m2
RUN sudo chown -R dspace:dspace \
    $CATALINA_HOME \
    /srv/dspace-src \
    /home/dspace/.m2 \
    /srv/dspace
WORKDIR /srv/dspace-src


ENV GEM_HOME=/home/dspace/.rvm/gems/ruby-2.5.1
ENV GEM_PATH=/home/dspace/.rvm/gems/ruby-2.5.1:/home/dspace/.rvm/gems/ruby-2.5.1@global
ENV PATH=$PATH:/home/dspace/.rvm/rubies/ruby-2.5.1/bin:/home/dspace/.rvm/gems/ruby-2.5.1/bin/

RUN whoami; pwd; ruby --version; compass --version;
RUN bash -c "mvn -Dmirage2.on=true -Dmirage2.deps.included=false package"
RUN rm -rf /srv/dspace/webapps/*;\
    ant -f /srv/dspace-src/dspace/target/dspace-installer/build.xml install_code;\
    ant -f /srv/dspace-src/dspace/target/dspace-installer/build.xml copy_webapps;\
    ant -f /srv/dspace-src/dspace/target/dspace-installer/build.xml init_geolite;

FROM tomcat:8.0-alpine

RUN echo 'http://dl-cdn.alpinelinux.org/alpine/v3.4/main' >> /etc/apk/repositories
RUN apk add --update libreoffice imagemagick 'ghostscript=9.22-r0'; \
    rm -f /var/cache/apk/*

COPY conf $CATALINA_HOME/conf

COPY --from=build /srv/dspace /srv/dspace

EXPOSE 8080:8080

CMD ["catalina.sh", "run"]
